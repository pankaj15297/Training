=======================================POSTGRESQL===========================================


====================CREATE,INSERT,SELECT,DROP,ALTER,Describe a table======================


CREATE TABLE Customer (CustomerID INT PRIMARY KEY NOT NULL, FName CHAR(20) NOT NULL, LName CHAR(20) NOT NULL, DOB DATE NOT NULL, Address CHAR(50) NOT NULL, City CHAR(20) NOT NULL, State CHAR(20) NOT NULL);

INSERT INTO customer VALUES (1, 'Pankaj', 'Kumar', '1997-02-15', 'Baniyapur', 'Chhapra', 'Bihar');

INSERT INTO customer (CustomerID, FName, LName, DOB, Address, City, State) VALUES (1, 'Pankaj', 'Kumar', '1997-02-15', 'Baniyapur', 'Chhapra', 'Bihar');

INSERT INTO customer (FName, LName, DOB, Address, City, State, CustomerID) VALUES ('Pankaj', 'Kumar', '1997-02-15', 'Baniyapur', 'Chhapra', 'Bihar', 1);


SELECT * FROM customer


customerid | fname  | lname |    dob     |  address  |  city   | state 
------------+--------+-------+------------+-----------+---------+-------
          1 | Pankaj | Kumar | 1997-02-15 | Baniyapur | Chhapra | Bihar
          2 | Pavan  | Kumar | 2007-02-23 | Baniyapur | Chhapra | Bihar
(2 rows)


\d Customer


            Table "public.customer"
   Column   |     Type      | Modifiers 
------------+---------------+-----------
 customerid | integer       | not null
 fname      | character(20) | not null
 lname      | character(20) | not null
 dob        | date          | not null
 address    | character(50) | not null
 city       | character(20) | not null
 state      | character(20) | not null
Indexes:
    "customer_pkey" PRIMARY KEY, btree (customerid)


ALTER TABLE customer ALTER COLUMN FName TYPE VARCHAR(20);

\d Customer


            Table "public.customer"
   Column   |         Type          | Modifiers 
------------+-----------------------+-----------
 customerid | integer               | not null
 fname      | character varying(20) | not null
 lname      | character(20)         | not null
 dob        | date                  | not null
 address    | character(50)         | not null
 city       | character(20)         | not null
 state      | character(20)         | not null
Indexes:
    "customer_pkey" PRIMARY KEY, btree (customerid)


ALTER TABLE customer ALTER COLUMN LName TYPE VARCHAR(20), ALTER COLUMN Address TYPE VARCHAR(50), ALTER COLUMN City TYPE VARCHAR(20), ALTER COLUMN State TYPE VARCHAR(20);

 
            Table "public.customer"
   Column   |         Type          | Modifiers 
------------+-----------------------+-----------
 customerid | integer               | not null
 fname      | character varying(20) | not null
 lname      | character varying(20) | not null
 dob        | date                  | not null
 address    | character varying(50) | not null
 city       | character varying(20) | not null
 state      | character varying(20) | not null
Indexes:
    "customer_pkey" PRIMARY KEY, btree (customerid)


DROP TABLE customer;
DROP TABLE


CREATE TABLE orders(OrderID INT PRIMARY KEY NOT NULL, CustomerID INT, Date DATE NOT NULL, Comments TEXT NOT NULL, FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID));
CREATE TABLE

\d Oredrs


      Table "public.orders"
   Column   |  Type   | Modifiers 
------------+---------+-----------
 orderid    | integer | not null
 customerid | integer | 
 date       | date    | not null
 comments   | text    | not null
Indexes:
    "orders_pkey" PRIMARY KEY, btree (orderid)
Foreign-key constraints:
    "orders_customerid_fkey" FOREIGN KEY (customerid) REFERENCES customer(customerid)


===================================UPDATE====================================


INSERT INTO orders VALUES (1, 7011, '2020-01-15', 'I have ordered a Phone');
ERROR:  insert or update on table "orders" violates foreign key constraint "orders_customerid_fkey"
DETAIL:  Key (customerid)=(7011) is not present in table "customer".


SELECT * FROM orders


 orderid | customerid |    date    |        comments        
---------+------------+------------+------------------------
       1 |          2 | 2020-01-15 | I have ordered a Phone
(1 row)



INSERT INTO orders VALUES (1, 2, '2020-01-15', 'I have ordered a Laptop');
ERROR:  duplicate key value violates unique constraint "orders_pkey"
DETAIL:  Key (orderid)=(1) already exists.




select * from customer;

 customerid |  fname  | lname  |    dob     |     address     |  city   | state  
------------+---------+--------+------------+-----------------+---------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi   | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | Delhi   | Delhi
(8 rows)

UPDATE customer SET city = 'South Delhi' WHERE customerid = 8;
UPDATE 1

select * from customer;
 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
(8 rows)


===================Before Delete record which is existed in foreign key===================

 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
         10 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
(10 rows)


 orderid | customerid |    date    |        comments         
---------+------------+------------+-------------------------
       1 |          2 | 2020-01-15 | I have ordered a Phone
       2 |          2 | 2020-01-15 | I have ordered a Laptop
       3 |         10 | 2020-01-15 | I have ordered a Bag
       4 |         10 | 2020-01-15 | I have ordered a Book
(4 rows)


=========================After Running Delete command=================================

DELETE FROM customer WHERE customerid = 10;
ERROR:  update or delete on table "customer" violates foreign key constraint "orders_customerid_fkey" on table "orders"
DETAIL:  Key (customerid)=(10) is still referenced from table "orders".


 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
         10 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
(10 rows)



 orderid | customerid |    date    |        comments         
---------+------------+------------+-------------------------
       1 |          2 | 2020-01-15 | I have ordered a Phone
       2 |          2 | 2020-01-15 | I have ordered a Laptop
       3 |         10 | 2020-01-15 | I have ordered a Bag
       4 |         10 | 2020-01-15 | I have ordered a Book
(4 rows)


=========================WHERE,LIKE,ORDER BY,DELETE,BETWEEN,<,=,>=========================

DELETE FROM orders WHERE customerid = 10;
DELETE 2


 orderid | customerid |    date    |        comments         
---------+------------+------------+-------------------------
       1 |          2 | 2020-01-15 | I have ordered a Phone
       2 |          2 | 2020-01-15 | I have ordered a Laptop
(2 rows)


DELETE FROM customer WHERE customerid = 10;
DELETE 1

 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
(9 rows)



SELECT * FROM customer WHERE fname LIKE 'P%';

 customerid |  fname  | lname |    dob     |  address  |  city   | state 
------------+---------+-------+------------+-----------+---------+-------
          1 | Pankaj  | Kumar | 1997-02-15 | Baniyapur | Chhapra | Bihar
          2 | Pavan   | Kumar | 2007-02-23 | Baniyapur | Chhapra | Bihar
          3 | Praveen | Kumar | 2012-02-23 | Baniyapur | Chhapra | Bihar
(3 rows)


SELECT * FROM customer WHERE fname LIKE '%v%';

 customerid |  fname  | lname |    dob     |  address  |  city   | state  
------------+---------+-------+------------+-----------+---------+--------
          2 | Pavan   | Kumar | 2007-02-23 | Baniyapur | Chhapra | Bihar
          3 | Praveen | Kumar | 2012-02-23 | Baniyapur | Chhapra | Bihar
          4 | Naveen  | Kumar | 2015-02-23 | Baniyapur | Chhapra | Bihar
          5 | Naveen  | Kumar | 1995-12-13 | Patiala   | Patiala | Punjab
          9 | Chhavi  | N/A   | 1973-08-15 | Merath    | Merath  | UP
(5 rows)


SELECT * FROM customer WHERE fname LIKE '%n';

 customerid |  fname  | lname |    dob     |  address  |  city   | state  
------------+---------+-------+------------+-----------+---------+--------
          2 | Pavan   | Kumar | 2007-02-23 | Baniyapur | Chhapra | Bihar
          3 | Praveen | Kumar | 2012-02-23 | Baniyapur | Chhapra | Bihar
          4 | Naveen  | Kumar | 2015-02-23 | Baniyapur | Chhapra | Bihar
          5 | Naveen  | Kumar | 1995-12-13 | Patiala   | Patiala | Punjab
(4 rows)



SELECT * FROM customer WHERE fname LIKE '_a%';   (Find that have 'a' at 2nd position)

 customerid | fname  | lname |    dob     |     address     |    city     | state  
------------+--------+-------+------------+-----------------+-------------+--------
          1 | Pankaj | Kumar | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan  | Kumar | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen | Kumar | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen | Kumar | 1995-12-13 | Patiala         | Patiala     | Punjab
          8 | Ramesh | Misra | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
(5 rows)



SELECT * FROM customer WHERE fname LIKE '__v%';  (Find that have 'v' at 3rd position)

 customerid | fname  | lname |    dob     |  address  |  city   | state  
------------+--------+-------+------------+-----------+---------+--------
          2 | Pavan  | Kumar | 2007-02-23 | Baniyapur | Chhapra | Bihar
          4 | Naveen | Kumar | 2015-02-23 | Baniyapur | Chhapra | Bihar
          5 | Naveen | Kumar | 1995-12-13 | Patiala   | Patiala | Punjab
(3 rows)




SELECT * FROM customer WHERE dob < '1997-02-15';

 customerid | fname  | lname  |    dob     |     address     |    city     | state  
------------+--------+--------+------------+-----------------+-------------+--------
          5 | Naveen | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit  | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi | N/A    | 1973-08-15 | Merath          | Merath      | UP
(5 rows)



SELECT * FROM customer WHERE dob BETWEEN '1997-02-15' AND '2012-02-23';

 customerid |  fname  | lname |    dob     |  address  |  city   | state 
------------+---------+-------+------------+-----------+---------+-------
          1 | Pankaj  | Kumar | 1997-02-15 | Baniyapur | Chhapra | Bihar
          2 | Pavan   | Kumar | 2007-02-23 | Baniyapur | Chhapra | Bihar
          3 | Praveen | Kumar | 2012-02-23 | Baniyapur | Chhapra | Bihar
(3 rows)


===================================ASC,DESC,LIMIT=========================================


SELECT * FROM (SELECT * FROM customer ORDER BY customerid DESC LIMIT 2) AS C ORDER BY customerid LIMIT 1;


 customerid | fname  | lname |    dob     |     address     |    city     | state 
------------+--------+-------+------------+-----------------+-------------+-------
          8 | Ramesh | Misra | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
(1 row)



SELECT * FROM customer;

 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
         10 | Sager   | Kumar  | 2012-02-23 | Chhapra         | Chhapra     | Bihar
         11 | Ujwal   | Kumar  | 2015-02-23 | Chhapra         | Chhapra     | Bihar
(11 rows)


======================Second Highest DOB, DISTINCT,LIMIT=================================


SELECT dob FROM (SELECT DISTINCT dob FROM customer ORDER BY dob DESC LIMIT 2) AS C ORDER BY dob LIMIT 1;


    dob     
------------
 2012-02-23
(1 row)


=====================================GROUP BY====================================


SELECT dob FROM customer GROUP BY dob;

    dob     
------------
 1973-08-15
 1993-08-15
 1995-12-13
 1997-02-15
 2007-02-23
 2012-02-23
 2015-02-23
(7 rows)


SELECT address FROM customer GROUP BY address;

     address     
-----------------
 Baniyapur
 Chhapra
 Merath
 New Ashok Nager
 Okhla
 Patiala
(6 rows)


SELECT city FROM customer GROUP BY city;

    city     
-------------
 Chhapra
 Delhi
 Merath
 Patiala
 South Delhi
(5 rows)


SELECT state FROM customer GROUP BY state;

 state  
--------
 Bihar
 Delhi
 Punjab
 UP
(4 rows)


================================Schema=====================================================

CREATE SCHEMA schemaname AUTHORIZATION username;

CREATE SCHEMA myschema;

CREATE TABLE myschema.department (ID INT PRIMARY KEY NOT NULL, name TEXT NOT NULL, AGE INT NOT NULL, address CHAR(50), salary MONEY, POSITION BIGINT );

SELECT * FROM myschema.department;

DROP SCHEMA myschema;  (drop schema if it is empty)

DROP SCHEMA myschema CASCADE;  (drop schema if it containes objects)


============================AND,OR,GROUP BY,HAVING=======================================


SELECT * FROM customer WHERE city = 'Chhapra'AND address = 'Chhapra';

 customerid | fname | lname |    dob     | address |  city   | state 
------------+-------+-------+------------+---------+---------+-------
         10 | Sager | Kumar | 2012-02-23 | Chhapra | Chhapra | Bihar
         11 | Ujwal | Kumar | 2015-02-23 | Chhapra | Chhapra | Bihar
(2 rows)


SELECT * FROM customer WHERE state = 'Delhi' OR state = 'Bihar';

 customerid |  fname  | lname  |    dob     |     address     |    city     | state 
------------+---------+--------+------------+-----------------+-------------+-------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
         10 | Sager   | Kumar  | 2012-02-23 | Chhapra         | Chhapra     | Bihar
         11 | Ujwal   | Kumar  | 2015-02-23 | Chhapra         | Chhapra     | Bihar
(8 rows)



SELECT * FROM customer;

 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
         10 | Sager   | Kumar  | 2012-02-23 | Chhapra         | Chhapra     | Bihar
         11 | Ujwal   | Kumar  | 2015-02-23 | Chhapra         | Chhapra     | Bihar
(11 rows)



SELECT dob FROM customer GROUP BY dob HAVING COUNT(dob) = 2;

    dob     
------------
 2015-02-23
 2012-02-23
 1995-12-13
 1973-08-15
(4 rows)

=================================Aggregate functions=====================================

SELECT SUM(customerid) FROM customer;

 sum 
-----
  66
(1 row)


SELECT AVG(customerid) FROM customer;

        avg         
--------------------
 6.0000000000000000
(1 row)


SELECT COUNT(address) FROM customer;   (It counts only NOT NULL address ie exclude null address)

 count 
-------
    11
(1 row)


SELECT DISTINCT COUNT(address) FROM customer;

 count 
-------
    11
(1 row)


SELECT COUNT(DISTINCT address) FROM customer;

 count 
-------
     6
(1 row)


SELECT COUNT(*) FROM customer;        (It counts number of rows)

 count 
-------
    11
(1 row)


SELECT MAX(customerid) FROM customer;

 max 
-----
  11
(1 row)


SELECT MIN(customerid) FROM customer;

 min 
-----
   1
(1 row)

=============================Created Product Table========================================


CREATE TABLE products (productid INT PRIMARY KEY NOT NULL, name VARCHAR(20) NOT NULL, description VARCHAR(100) NOT NULL, size INT NOT NULL, unit INT NOT NULL, ordercomments VARCHAR NOT NULL);
CREATE TABLE

\d Products;

              Table "public.products"
    Column     |          Type          | Modifiers 
---------------+------------------------+-----------
 productid     | integer                | not null
 name          | character varying(20)  | not null
 description   | character varying(100) | not null
 size          | integer                | not null
 unit          | integer                | not null
 ordercomments | character varying      | not null
Indexes:
    "products_pkey" PRIMARY KEY, btree (productid)



=============================Created OrderProducts Table================================


CREATE TABLE orderproducts (orderid INT, productid INT, qty INT NOT NULL, orderproductscomments VARCHAR(100) NOT NULL, FOREIGN KEY(orderid) REFERENCES orders(orderid), FOREIGN KEY(productid) REFERENCES products(productid));
CREATE TABLE

\d orderproducts;


                Table "public.orderproducts"
        Column         |          Type          | Modifiers 
-----------------------+------------------------+-----------
 orderid               | integer                | 
 productid             | integer                | 
 qty                   | integer                | not null
 orderproductscomments | character varying(100) | not null
Foreign-key constraints:
    "orderproducts_orderid_fkey" FOREIGN KEY (orderid) REFERENCES orders(orderid)
    "orderproducts_productid_fkey" FOREIGN KEY (productid) REFERENCES products(productid)




==========================================JOIN=========================================


SELECT * FROM customer;

 customerid |  fname  | lname  |    dob     |     address     |    city     | state  
------------+---------+--------+------------+-----------------+-------------+--------
          1 | Pankaj  | Kumar  | 1997-02-15 | Baniyapur       | Chhapra     | Bihar
          2 | Pavan   | Kumar  | 2007-02-23 | Baniyapur       | Chhapra     | Bihar
          3 | Praveen | Kumar  | 2012-02-23 | Baniyapur       | Chhapra     | Bihar
          4 | Naveen  | Kumar  | 2015-02-23 | Baniyapur       | Chhapra     | Bihar
          5 | Naveen  | Kumar  | 1995-12-13 | Patiala         | Patiala     | Punjab
          6 | Bharti  | Kumari | 1995-12-13 | Patiala         | Patiala     | Punjab
          7 | Mohit   | Sharma | 1993-08-15 | Okhla           | Delhi       | Delhi
          8 | Ramesh  | Misra  | 1973-08-15 | New Ashok Nager | South Delhi | Delhi
          9 | Chhavi  | N/A    | 1973-08-15 | Merath          | Merath      | UP
         10 | Sager   | Kumar  | 2012-02-23 | Chhapra         | Chhapra     | Bihar
         11 | Ujwal   | Kumar  | 2015-02-23 | Chhapra         | Chhapra     | Bihar
(11 rows)



SELECT * FROM products;


 productid |  name  |       description        |   size   | unit |     ordercomments     
-----------+--------+--------------------------+----------+------+-----------------------
         1 | Mobile | High battery backup      | 5-INCH   |    2 | This is Samsung phone
         2 | Laptop | 1 TB Storage             | 15-INCH  |    2 | This is HP laptop
         3 | Laptop | 1 TB Storage and Full HD | 15-INCH  |    5 | This is Dell laptop
         4 | Mobile | 48 MP Camera             | 5.5-INCH |   10 | This is Apple phone
         5 | shoe   | Plastic shoe             | 7-INCH   |   10 | This is Xparks Shoe
         6 | shoe   | Lather                   | 4-INCH   |   15 | This is Lakhani Shoe
         7 | shoe   | Lather                   | 4-INCH   |   20 | This is Woodland Shoe
         8 | Pen    | Link is gold             | 4-MITER  |    2 | This is Link Pen
(8 rows)



SELECT customerid, unit, productid, fname, name FROM customer INNER JOIN products ON customerid = unit;

(Mapping each on customerid = unit)


 customerid | unit | productid | fname  |  name  
------------+------+-----------+--------+--------
          2 |    2 |         1 | Pavan  | Mobile
          2 |    2 |         2 | Pavan  | Laptop
          5 |    5 |         3 | Naveen | Laptop
         10 |   10 |         4 | Sager  | Mobile
         10 |   10 |         5 | Sager  | shoe
          2 |    2 |         8 | Pavan  | Pen
(6 rows)




SELECT * FROM customer CROSS JOIN products;

(A CROSS JOIN matches every row of the first table with every row of the second table.)



   customerid | unit | productid |  fname  |  name  
------------+------+-----------+---------+--------
          1 |    2 |         1 | Pankaj  | Mobile
          2 |    2 |         1 | Pavan   | Mobile
          3 |    2 |         1 | Praveen | Mobile
          4 |    2 |         1 | Naveen  | Mobile
          5 |    2 |         1 | Naveen  | Mobile
          6 |    2 |         1 | Bharti  | Mobile
          7 |    2 |         1 | Mohit   | Mobile
          8 |    2 |         1 | Ramesh  | Mobile
          9 |    2 |         1 | Chhavi  | Mobile
         10 |    2 |         1 | Sager   | Mobile
         11 |    2 |         1 | Ujwal   | Mobile
          1 |    2 |         2 | Pankaj  | Laptop
          2 |    2 |         2 | Pavan   | Laptop
          3 |    2 |         2 | Praveen | Laptop
          4 |    2 |         2 | Naveen  | Laptop
          5 |    2 |         2 | Naveen  | Laptop
          6 |    2 |         2 | Bharti  | Laptop
          7 |    2 |         2 | Mohit   | Laptop
          8 |    2 |         2 | Ramesh  | Laptop
          9 |    2 |         2 | Chhavi  | Laptop
         10 |    2 |         2 | Sager   | Laptop
         11 |    2 |         2 | Ujwal   | Laptop
          1 |    5 |         3 | Pankaj  | Laptop
          2 |    5 |         3 | Pavan   | Laptop
          3 |    5 |         3 | Praveen | Laptop
          4 |    5 |         3 | Naveen  | Laptop
          5 |    5 |         3 | Naveen  | Laptop
          6 |    5 |         3 | Bharti  | Laptop
          7 |    5 |         3 | Mohit   | Laptop
          8 |    5 |         3 | Ramesh  | Laptop
          9 |    5 |         3 | Chhavi  | Laptop
         10 |    5 |         3 | Sager   | Laptop
         11 |    5 |         3 | Ujwal   | Laptop
          1 |   10 |         4 | Pankaj  | Mobile
          2 |   10 |         4 | Pavan   | Mobile
          3 |   10 |         4 | Praveen | Mobile
          4 |   10 |         4 | Naveen  | Mobile
          5 |   10 |         4 | Naveen  | Mobile
          6 |   10 |         4 | Bharti  | Mobile
          7 |   10 |         4 | Mohit   | Mobile
          8 |   10 |         4 | Ramesh  | Mobile
          9 |   10 |         4 | Chhavi  | Mobile
         10 |   10 |         4 | Sager   | Mobile
         11 |   10 |         4 | Ujwal   | Mobile
          1 |   10 |         5 | Pankaj  | shoe
          2 |   10 |         5 | Pavan   | shoe
          3 |   10 |         5 | Praveen | shoe
          4 |   10 |         5 | Naveen  | shoe
          5 |   10 |         5 | Naveen  | shoe
          6 |   10 |         5 | Bharti  | shoe
          7 |   10 |         5 | Mohit   | shoe
          8 |   10 |         5 | Ramesh  | shoe
          9 |   10 |         5 | Chhavi  | shoe
         10 |   10 |         5 | Sager   | shoe
         11 |   10 |         5 | Ujwal   | shoe
          1 |   15 |         6 | Pankaj  | shoe
          2 |   15 |         6 | Pavan   | shoe
          3 |   15 |         6 | Praveen | shoe
          4 |   15 |         6 | Naveen  | shoe
          5 |   15 |         6 | Naveen  | shoe
          6 |   15 |         6 | Bharti  | shoe
          7 |   15 |         6 | Mohit   | shoe
          8 |   15 |         6 | Ramesh  | shoe
          9 |   15 |         6 | Chhavi  | shoe
         10 |   15 |         6 | Sager   | shoe
         11 |   15 |         6 | Ujwal   | shoe
          1 |   20 |         7 | Pankaj  | shoe
          2 |   20 |         7 | Pavan   | shoe
          3 |   20 |         7 | Praveen | shoe
          4 |   20 |         7 | Naveen  | shoe
          5 |   20 |         7 | Naveen  | shoe
          6 |   20 |         7 | Bharti  | shoe
          7 |   20 |         7 | Mohit   | shoe
          8 |   20 |         7 | Ramesh  | shoe
          9 |   20 |         7 | Chhavi  | shoe
         10 |   20 |         7 | Sager   | shoe
         11 |   20 |         7 | Ujwal   | shoe
          1 |    2 |         8 | Pankaj  | Pen
          2 |    2 |         8 | Pavan   | Pen
          3 |    2 |         8 | Praveen | Pen
          4 |    2 |         8 | Naveen  | Pen
          5 |    2 |         8 | Naveen  | Pen
          6 |    2 |         8 | Bharti  | Pen
          7 |    2 |         8 | Mohit   | Pen
          8 |    2 |         8 | Ramesh  | Pen
          9 |    2 |         8 | Chhavi  | Pen
         10 |    2 |         8 | Sager   | Pen
         11 |    2 |         8 | Ujwal   | Pen
(88 rows)




SELECT customerid, fname, productid, name, unit FROM customer LEFT OUTER JOIN products ON customerid = unit;


 customerid |  fname  | productid |  name  | unit 
------------+---------+-----------+--------+------
          2 | Pavan   |         1 | Mobile |    2
          2 | Pavan   |         2 | Laptop |    2
          5 | Naveen  |         3 | Laptop |    5
         10 | Sager   |         4 | Mobile |   10
         10 | Sager   |         5 | shoe   |   10
          2 | Pavan   |         8 | Pen    |    2
         11 | Ujwal   |           |        |     
          8 | Ramesh  |           |        |     
          6 | Bharti  |           |        |     
          4 | Naveen  |           |        |     
          1 | Pankaj  |           |        |     
          3 | Praveen |           |        |     
          9 | Chhavi  |           |        |     
          7 | Mohit   |           |        |     
(14 rows)



SELECT customerid, fname, productid, name, unit FROM customer RIGHT OUTER JOIN products ON customerid = unit;


 customerid | fname  | productid |  name  | unit 
------------+--------+-----------+--------+------
          2 | Pavan  |         1 | Mobile |    2
          2 | Pavan  |         2 | Laptop |    2
          5 | Naveen |         3 | Laptop |    5
         10 | Sager  |         4 | Mobile |   10
         10 | Sager  |         5 | shoe   |   10
            |        |         6 | shoe   |   15
            |        |         7 | shoe   |   20
          2 | Pavan  |         8 | Pen    |    2
(8 rows)



SELECT customerid, fname, productid, name, unit FROM customer FULL OUTER JOIN products ON customerid = unit;


 customerid |  fname  | productid |  name  | unit 
------------+---------+-----------+--------+------
          2 | Pavan   |         1 | Mobile |    2
          2 | Pavan   |         2 | Laptop |    2
          5 | Naveen  |         3 | Laptop |    5
         10 | Sager   |         4 | Mobile |   10
         10 | Sager   |         5 | shoe   |   10
            |         |         6 | shoe   |   15
            |         |         7 | shoe   |   20
          2 | Pavan   |         8 | Pen    |    2
         11 | Ujwal   |           |        |     
          8 | Ramesh  |           |        |     
          6 | Bharti  |           |        |     
          4 | Naveen  |           |        |     
          1 | Pankaj  |           |        |     
          3 | Praveen |           |        |     
          9 | Chhavi  |           |        |     
          7 | Mohit   |           |        |     
(16 rows)




=================================Constraints====================================

CREATE TABLE COMPANY(
   ID INT PRIMARY KEY     NOT NULL,
   NAME           TEXT    NOT NULL,
   AGE            INT     NOT NULL,
   ADDRESS        CHAR(50),
   SALARY         REAL    CHECK(SALARY > 0)
);


1) (CHECK)During insertion salary > 0 only accepts ie those salaries are accepted which > 0.
2) (NOT NULL):- Attributes ID, NAME, AGE, ADDRESS should not be null.
3) PRIMARY KEY(NOT NULL + UNIQUE) define every row uniquly.
4) FOREIGN KEY referenced rows that are related to primary key.
5) UNIQUE makes difference in all records.





===============================RENAME, ADD, DROP a column================================


\d products


              Table "public.products"
    Column     |          Type          | Modifiers 
---------------+------------------------+-----------
 productid     | integer                | not null
 name          | character varying(20)  | not null
 description   | character varying(100) | not null
 size          | character varying(10)  | not null
 unit          | integer                | not null
 ordercomments | character varying      | not null
Indexes:
    "products_pkey" PRIMARY KEY, btree (productid)
Referenced by:
    TABLE "orderproducts" CONSTRAINT "orderproducts_productid_fkey" FOREIGN KEY (productid) REFERENCES products(productid)




ALTER TABLE products RENAME COLUMN ordercomments TO productcomments; 
ALTER TABLE

\d products


               Table "public.products"
     Column      |          Type          | Modifiers 
-----------------+------------------------+-----------
 productid       | integer                | not null
 name            | character varying(20)  | not null
 description     | character varying(100) | not null
 size            | character varying(10)  | not null
 unit            | integer                | not null
 productcomments | character varying      | not null
Indexes:
    "products_pkey" PRIMARY KEY, btree (productid)
Referenced by:
    TABLE "orderproducts" CONSTRAINT "orderproducts_productid_fkey" FOREIGN KEY (productid) REFERENCES products(productid)




\d customer;


            Table "public.customer"
   Column   |         Type          | Modifiers 
------------+-----------------------+-----------
 customerid | integer               | not null
 fname      | character varying(20) | not null
 lname      | character varying(20) | not null
 dob        | date                  | not null
 address    | character varying(50) | not null
 city       | character varying(20) | not null
 state      | character varying(20) | not null
Indexes:
    "customer_pkey" PRIMARY KEY, btree (customerid)
Referenced by:
    TABLE "orders" CONSTRAINT "orders_customerid_fkey" FOREIGN KEY (customerid) REFERENCES customer(customerid)



ALTER TABLE customer ADD email VARCHAR(35);
ALTER TABLE

\d customer;


            Table "public.customer"
   Column   |         Type          | Modifiers 
------------+-----------------------+-----------
 customerid | integer               | not null
 fname      | character varying(20) | not null
 lname      | character varying(20) | not null
 dob        | date                  | not null
 address    | character varying(50) | not null
 city       | character varying(20) | not null
 state      | character varying(20) | not null
 email      | character varying(35) | 
Indexes:
    "customer_pkey" PRIMARY KEY, btree (customerid)
Referenced by:
    TABLE "orders" CONSTRAINT "orders_customerid_fkey" FOREIGN KEY (customerid) REFERENCES customer(customerid)



ALTER TABLE customer DROP email;
ALTER TABLE

\d customer;


            Table "public.customer"
   Column   |         Type          | Modifiers 
------------+-----------------------+-----------
 customerid | integer               | not null
 fname      | character varying(20) | not null
 lname      | character varying(20) | not null
 dob        | date                  | not null
 address    | character varying(50) | not null
 city       | character varying(20) | not null
 state      | character varying(20) | not null
Indexes:
    "customer_pkey" PRIMARY KEY, btree (customerid)
Referenced by:
    TABLE "orders" CONSTRAINT "orders_customerid_fkey" FOREIGN KEY (customerid) REFERENCES customer(customerid)






