#=================================================

# a = [1, "two", 3.0]
# p a

# a = Array.new
# p a

# a = Array.new(3)
# p a

# a =Array.new(5, true)
# p a

# a = Array.new(4, "nan")
# p a

# a = Array.new{Hash.new}
# p a

# a = Array.new(5){Hash.new}
# p a

# a = Array.new(4) {|i| i}
# p a

# Array.new(4) {|i| print i, ' '}

# p Array.new(5) {|i| i.to_s }

# Array.new(5) {|i| print i.to_s, ' ' }

# p Array.new(4) {Array.new(2)}

# a = Array.new(4) {Array.new(2)}
# p a

# a = Array.new(3) {Array.new(2) {Array.new(2, true)}}
# p a

# a = Array({:a => "a", :b => "b"})
# p a

#==========================================================

# a = [1,2,3,4,5,6]

# p a[1000]
# p a[2]
# p a[-1]
# p a[1..3]
# p a[1...3]
# p a[1,4]
# p a[-3..-2]
# p a[-4,3]

#===========================================================

# a = [1,2,3,4,5,6]
# p a.at(2)

#===========================================================

# a = ['a', 'b', 'c', 'd', 'e', 'f']

# p a.fetch(1)
# p a.fetch(5)
# # p a.fetch(100)  #index error
# p a.fetch(100, "Not found")

#===========================================================

# a = ['a', 'b', 'c', 'd', 'e', 'f']

# p a.first
# p a.last
# p a.take(3)

#============================================================

# a = ['a', 'b', 'c', 'd', 'e', 'f']

# p a.drop(3)
# p a

#=============================================================

# a = ['a', 'b', 'c', 'd', 'e', 'f']

# p a.length
# p a.size
# p a.count

# a = "ksdjnf"
# p a.size


#=============================================================

# b = []

# p b.empty?

# a = ['a', 'b', 'c', 'd', 'e', 'f']

# p a.empty?
# p a.include? 'c'
# p a.include? 'x'

#=============================================================

# a = [1,2,3,4,5]

# p a.push(6)
# p a
# p a << 7
# p a

#=============================================================

# a = [1,2,3,4,5]

# p a.unshift(0)

#=============================================================

# a = [1,2,3,4,5]

# p a.insert(10, "hello")
# p a.insert(2, "world")
# p a.insert(3, "abc", "xyz")

#=============================================================

# a = [1,2,3,4,5,6]

# p a.pop
# p a
# p a.pop
# p a

#=============================================================

# a = [1,2,3,4,5,6]

# p a.shift
# p a

#=============================================================

# a = [1,2,3,4,5,6]

# p a.delete_at(2)
# p a

#=============================================================

# a = [1,2,2,3,5,5,8,9]

# p a.delete(2)
# p a

#=============================================================

# a = [1, 2, nil, "hello", 3.0, nil]

# p a.compact
# p a

# a = [1, 2, nil, "hello", 3.0, nil]

# p a.compact!
# p a

# a = [1, 2, "hello", 3.0]

# p a.compact!  #nil
# p a

#==============================================================

# a = [1,2,3,4,5,6,7,8,9,9,8,7,4,5,6,1,2,3]

# p a.uniq
# p a

# a = [1,2,3,4,5,6,7,8,9,9,8,7,4,5,6,1,2,3]

# p a.uniq!
# p a

# a = [1,2,3,4,5,6,7,8,9]

# p a.uniq!
# p a

#===============================================================

# a = [1,2,3,4,5,6,2,5]

# a.each {|i| print i -= 5, ','}

#===============================================================

# w = %w[this is ruby array method]

# p w
# s = ""
# w.reverse_each {|i| s += "#{i} "}
# p s

#===============================================================

# a = [1,2,3,4,5,6,7]

# p a.map {|i| i*2}
# p a

# a = [1,2,3,4,5,6,7]

# p a.map! {|i| i*2}
# p a

#===============================================

# a = [1,2,3,4,5,6,7]

# p a.select {|i| i > 3}
# p a

# p a.reject {|i| i > 3}
# p a


# a = [1,2,3,4,5,6,7]

# p a.select! {|i| i > 3}
# p a

# p a.reject {|i| i > 3}
# p a

#=================================================

# a = [1,2,3,4,5,6,7,8,9]

# p a.drop_while {|i| i > 5}
# p a

# p a.delete_if {|i| i > 5}
# p a

# p a.keep_if {|i| i < 5}
# p a

#=================================================

# p Array.[](1,'a', /^A/)
# p Array[1, 'a', /^A/]
# p [1, 'a', /^A/]

#=================================================

# a = [1,2,3,4,5]

# b = Array.new(a)
# p b


# a = [1,2,3,4,5]
# b = [1,2,3,4,5]

# p a.equal? b
# p a == b

#=================================================

# a = Array.new(4, Hash.new)
# p a
# a[0]['a'] = "Ruby"
# p a
# a[1]['b'] = "Rails"
# p a

# a = Array.new(4, Array.new)
# p a

#=================================================

# a = Array.new(5) {Hash.new}

# a[0]['a'] = "Ruby"
# p a
# a[4]['d'] = "Rails"
# p a

#=================================================

# p Array.try_convert([1,2])
# p Array.try_convert("1")

#=================================================

# p [1,1,3,5] & [3,2,1]
# p ['a', 'b', 'b', 'z'] & ['a', 'b', 'c']

# p [1,2,3] * 3
# p [1,2,3] * ""
# p [1,2,3] * ","

# p [1,2,3,4,5] + [5,6,7]

# x = [1,2,3]
# y = [4,5,6]

# p x += y
# p x
# p y

# x = [1,2,3]
# y = [4,5,6]

# x = x + y
# p x

# p [1,2,3,4,5,6] - [9,6,5]

#============================================

# a = [1,2,3,4]

# p a << 5
# p a
# p a << 6 << 7 << [8,9,10]
# p a

#============================================

# p ["a", "a", "c"] <=> ["a", "b", "c"]
# p ["a", "b", "c"] <=> ["a", "b", "c"]
# p [1,2,3,4,5] <=> [1,2,3,4]
# p [1,2,3,4,5] <=> [1,2,4]
# p [1,2] <=> [1, :two]

# p [1,2,3] == [1,2,3]
# p [1,2,3] == [1,2,3,4]

#============================================

# a = ["a", "b", "c", "d", "e"]
# p a[2] + a[0] + a[1]

# a = Array.new
# a[5] = 5
# p a
# a[2, 4] = "Hello" 
# p a
# a[2, 3] = "Hello" 
# p a

#============================================

# a = [1,2]
# a.append(5)
# p a
# p a.at(-1)

#============================================

# a = [0,5,14,22]

# p a.bsearch {|x| x >= 5}
# p a.bsearch {|x| x > 5}
# p a.bsearch {|x| x >= 8}
# p a.bsearch {|x| x > 8}
# p a.bsearch {|x| x >= -5}
# p a.bsearch {|x| x = 5}

#=============================================

# a = [1,2,3,4,5]

# p a.clear
# p a

#=============================================

# a = ["a", "b", "c", "d"]

# p a.collect {|x| x + "!"}
# p a

# a = ["a", "b", "c", "d"]

# p a.collect! {|x| x + "!"}
# p a

# p a.map.with_index {|x, i| x * i}
# p a


# a = [1,2,3,4,5]

# p a.collect {|x| x > 3}

#=============================================

# a = [ "a", "b", "c", "d" ]

# p a.map! {|x| x + "!" }
# p a
# p a.collect!.with_index {|x, i| x[0...i] }
# p a

#=============================================

# a = [1,2,3,4]

# p a.combination(1).to_a
# p a.combination(2).to_a
# p a.combination(10).to_a
# p a.combination(0).to_a

#=============================================

# a = [1, nil, 2, 3, nil, 4]
# p a.compact!
# p a

#=============================================

# a = ["a", "b"]
# b = ["c", "d"]

# p a.concat b
# p a
# p b


# a = ["a", "b"]
# b = ["c", "d"]

# p a.concat b, ["e", "f"]
# p a
# p b

#=============================================

# a = [1,5,4,5]

# p a.count(5)
# p a.count
# p a.count {|x| x % 2 == 0}

#=============================================

# a = ["a", "b", "c"]

# a.cycle(0) {|x| puts x}
# a.cycle(1) {|x| puts x}
# a.cycle(2) {|x| puts x}

#=============================================

# a = ["a", "b", "c", "d", "e"]

# p a.delete("b")
# p a

# p a.delete("x")
# p a.delete("x") {"Not found"}

# p a.delete_at(2)
# p a
# p a.delete_at(100)

#==============================================

# a = [1,2,3,4,5,6,7,8]

# p a.delete_if {|x| x > 4}
# p a

# p [1,2,3,4,4,5].difference([4,5,6])
# p [ 1, 'c', :s, 'yep' ].difference([ 1 ], [ 'a', 'c' ])

#==============================================

# a = [[1,[2,3]]]

# p a.dig(0,1,1)
# p a.dig(0)
# p a.dig(0,1)
# p a.dig(0,2,4)
# # p a.dig(0,0,0) #error

# a = [42, {foo: :bar}]
# p a.dig(1, :foo) 
# p a.dig(1, :foooo) 

#============================================

# a = [1,2,3,4,5,6,7]

# p a.drop_while {|x| x < 3}
# p a

#============================================

# a = ["a", "b", "c"]

# a.each {|x| print x, '--'}
# a.each_index {|i| print i, '--'}

#============================================

# p [].empty?

# a = [11,22,33,44]

# p a.fetch(1)
# p a.fetch(-1)
# p a.fetch(4, 'cat') 
# a.fetch(100) {|x| puts "#{x} is out of bounds"}

#============================================

# a = ["a", "b", "c", "d"]

# p a.fill("x")
# p a.fill("z", 2, 2)
# p a.fill("z", 2, 2)
# p a.fill("x", 0..1)
# p a.fill {|i| i*i}

#============================================

# p [1,2,3,4,5].select {|i| i.even?}

# a = ["a", "b", "c", "d"]

# p a.index("b")
# p a.index("x")
# p a.index {|x| x == "b"}

# p a.first(2)

#============================================

# a = [1,2,3]
# b = ["a", "b", "c"]
# c = [a, b, 11,22]

# p c
# p c.flatten

# a = [ 1, 2, [3, [4, 5] ] ]

# p a.flatten(1)
# p a

# a = [ 1, 2, [3, [4, 5] ] ]

# p a.flatten!(1)
# p a

# p a.flatten!
# p a

# a = [ 1, 2, 3, 4, 5 ]

# p a.flatten!
# p a


#=========================================

# a = [ 1, 2, [3, [4, 5] ] ]

# p a.include? 2
# p a.include? [3, [4,5]]

#=========================================

# a = ["a", "b", "c", "d", "e"]

# p a.replace(["x", "y", "z"])
# p a

#=========================================

# a = %w{ a b c d }

# p a.insert(2, 99)
# p a.insert(-2, 1, 2, 3) 

# p [ "a", "b", "c" ].to_s

#=========================================

# p ["a", "b", "c"].join
# p ["a", "b", "c"]. join("-")
# p [ "a", [1, 2, [:x, :y]], "b" ].join("-")

#=========================================

# p [1,2,3,4].product([3,4,5,6])
# p [1,2].product([3,4], [5,6])
# p [1,2].product()
# p [1,2].product([])

#=========================================

# a = [1,2,3,4]

# p a.reverse
# p a

# a = [ "a", "b", "c" ]
# a.reverse_each {|x| print x, " " }

#===========================================

# a = [ "a", "b", "b", "b", "c" ]

# p a.rindex("b")
# p a.rindex("z")
# p a.rindex {|x| x == "b"} 

#===========================================

# a = [ "a", "b", "c", "d" ]

# p a.rotate 
# p a 
# p a.rotate(2)
# p a.rotate(-3) 

#===========================================

# a = [ "a", "b", "c", "d" ]

# p a.rotate! 
# p a 
# # p a.rotate(2)
# # p a.rotate(-3)

#===========================================

# a = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]

# p a.sample
# p a.sample(4)

# a = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]

# p a.sample(random: Random.new(1))
# p a.sample(4, random: Random.new(1)) 

#===========================================






















